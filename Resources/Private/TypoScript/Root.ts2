namespace: Neos=TYPO3.Neos
namespace: TypoScript=TYPO3.TypoScript
namespace: MediaRow=Dotpulse.MediaRow


prototype(Neos:Page) {
	head {
		mediaRow = TypoScript:Tag {
			tagName = 'link'
			attributes {
				rel = 'stylesheet'
				href = TYPO3.TypoScript:ResourceUri {
					path = 'resource://Dotpulse.MediaRow/Public/Main.css'
				}
			}
		}
		mediaRow.@if.isEnabled = ${Configuration.setting('Dotpulse.MediaRow.includeCSS')}
		mediaRow.@if.hasElementOrIsBackend = ${q(node).children('[instanceof TYPO3.Neos:ContentCollection]').find('[instanceof Dotpulse.MediaRow:Container]').is() || node.context.inBackend}
	}
}

prototype(MediaRow:Container) < prototype(Neos:Content) {
	configuration = ${Configuration.setting('Dotpulse.MediaRow')}
	@context.configuration = ${this.configuration}
	hasMediaOrBackend = ${q(node).children().children().is() || node.context.inBackend}
	container = ${q(node).parent().parent('[instanceof TYPO3.Neos:Document]').is() ? true : false}
	@context.container = ${this.container}

	attributes.class = TypoScript:RawArray {
		mediarow = ${container ? configuration.class.container : false}
	}

	media = Neos:ContentCollection {
		nodePath = 'media'
		attributes.class = TypoScript:RawArray {
			container = ${configuration.class.row}
		}
	}

	prototype(Neos:Content) {
		maximumWidth = ${Math.ceil(Configuration.setting('Dotpulse.MediaRow.baseWith') / q(node).parent().children().count())}
		attributes.class = TypoScript:RawArray {
			mediarow = ${Configuration.setting('Dotpulse.MediaRow.class.col')}
		}
	}

	prototype(TYPO3.Neos.NodeTypes:Image) {
		maximumWidth = ${Math.ceil(Configuration.setting('Dotpulse.MediaRow.baseWith') / q(node).parent().children().count())}
	}

}
